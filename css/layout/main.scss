// /* IMPORT */

@import "../common/reset.scss";
@import "../common/variables.scss";
@import "../layout/header.scss";
@import "../layout/footer.scss";
@import "../common/mixin.scss";
@import url("https://fonts.googleapis.com/css2?family=Shrikhand&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@200&family=Playfair+Display:wght@400;600&family=Roboto:wght@100;400&display=swap");
@import "../img-background-resto.scss";
// pages -> layout -> components
/*
	Standard CSS Reset
	This is used to account for differences in browsers.
	Without a reset stylesheet there could be differences
	between browsers when loading your html website.
    "https://www.codegrepper.com/code-examples/css/2020+scss+reset"
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
  font-family: Roboto;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}


/* MAIN PAGE */
main{
  width: 100%;
}

.menu{
  width: 100%;
  border-radius: 50px 50px 0 0 ;
  background-color: $background-color;
 margin-top:-50px; 
 
}
.title-restaurant{
  @include center;
}

.menu-title{
  font-size: 35px;
  padding: 35px 15px;
  font-family: Shrikhand;
}
h2{
  color: rgb(73, 73, 73);
  padding-bottom: 5px;
  width: 100%;
}
.icon-title{
 width: 30px;
 height: 40px;
}

.underliner{
  height: 3px;
  width: 50px;
background-color: $color-tertiary;
margin-left: 10px;

}
.section-menu__title{
  width: 90%;
  padding: 10px;
}
.cards-container{
  width:100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
#card-container{
  animation-delay: 3s;
}
.card-menu{
  width: 90%;
  height: 40px;
  box-shadow: 6px 6px 6px 1px #dfdcdc;
  margin: 20px 0 20px 0;
  border-radius: 20px;
  padding: 10px;
  background-color: white;
  overflow: hidden;
  display:flex ;
  flex-direction: column;
  animation-name:appareted ;
  
}
.info{
  width: 100%;
  display: flex;
  justify-content: space-between;
  height: 50px;
}

.subtitle{
font-size:20px;
font-weight: 900;
padding-bottom: 5px;
}

.text{
  width: 100%;
  color: rgb(73, 73, 73);
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.price{
  font-weight: bolder;
  width: 50px;
}
.select-container{
  width: 60px;
  height:60px;
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
  background-color: $color-tertiary;
  position: relative;
  bottom: 35px;
  margin-right: -68px;
}
.check{
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  margin-top: 20px;
  
}
.card-menu:hover{
& .select-container{
  transform: translateX(-50px);
  transition:linear 0.5s;
}
& .price{
  transform: translateX(-50px);
  transition:linear 0.5s;
}
& .text{
  width: calc(100% - 100px);
}
}
.card-menu:hover .check{
  transform: rotate(360deg);
  transition: 1s;
}
.card-menu:hover .info .price{
  display: flex;
  flex-wrap: wrap;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
/* BUTTON */
.button-container {
  width: 100%;
  @include center;
  padding-bottom: 40px;
}
.button {
  height: 50px;
  @include center;
  background: linear-gradient($color-secondary, $color-primary);
  color: white;
  font-weight: bold;
  padding: 0px 40px;
  border-radius: 50px;
  &:hover {
    background: linear-gradient($color-secondary-hover, $color-primary-hover);
  }
}

/*{
   outline: solid 1px red}*/



  